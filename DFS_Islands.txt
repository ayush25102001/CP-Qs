CODECHEF:MAXIMUM SIZE(DFS Approach)Connected components(islands)(2D grid)
 
#include<bits/stdc++.h>
#include<iostream>
#include<vector>
#define FAST_IO ios_base::sync_with_stdio(false);cin.tie(0);
#define int long long
#include<algorithm>
using namespace std;
int dx[]={1,-1,0,0};
int dy[]={0,0,1,-1};
int dfs(int i,int j,int& n,int& m,string s[])
    {
        if(i<0||j<0||i>=n||j>=n||s[i][j]=='0')
        {
            return 0;
        }
        int ans=1;
        s[i][j]='0';
        for(int k=0;k<4;k++)
           {
                int x=i+dx[k];
                int y=j+dy[k];
                ans+=dfs(x,y,n,m,s);
            }
        return ans;
    }
signed main()
{
    FAST_IO;
    int t=0;
    cin>>t;
    
    while(t--)
    {
        int n,m;
        cin>>n>>m;
        string s[n];
        vector<int> a;
        for(int i=0;i<n;i++)
        {
            cin>>s[i];
        }
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(s[i][j]=='1')
                {
                    int cnt=dfs(i,j,n,m,s);
                    a.push_back(cnt);
                }
            }
        }
        sort(a.begin(),a.end(),greater<int>());
        int cnt=0;
        for(int i=1;i<(int)a.size();i+=2)
        {
            cnt+=a[i];
        }
        cout<<cnt<<endl;
        
    }
    return 0;
}

 
 